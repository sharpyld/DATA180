graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
R.Version()
install.packages("cowplot")
library(ggplot2)
install.packages("cowplot")
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
ggplot(diamonds, aes(x=cut,y=price)) + geom_boxplot()
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, fill= km_3) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, fill= km_3)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, fill= km_3)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, group= km_3)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
#install.packages('maps') # you only need to do this once. maps package includes various maps that we can use.
#install.packages('sf') # you only need to do this once
library(maps)     # Provides latitude and longitude data for various maps
library(sf)
# read the state population data
MainStates <- map_data("state")
#plot all states with ggplot2, using black borders and light blue fill
ggplot() +
geom_polygon( data=MainStates, aes(x=long, y=lat, group=group),
color="black", fill="lightblue" ) +
coord_sf(crs = st_crs(4326)) # projection
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, group= km_3)) + geom_boxplot(position = "identity")
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, group= km_3)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, group= km_3)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein,group= km_3)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat,group= km_3)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose,group= km_3)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash,group= km_3)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
wgss<-rep(0,8)
for(i in 1:8){wgss[i]<-kmeans(Mammals_Milk_Std,centers=i,nstart=50)$tot.withinss}
plot(c(1:8),wgss,type="b",pch=16,cex=1.3,ylim=c(0,100), xlab="Number of Groups",ylab="WGSS")
library(dplyr)
MMilk_Agg_K3 <- Mammals_Milk %>% group_by(km_3) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
MMilk_Agg_K4 <- Mammals_Milk %>% group_by(km_4) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
#MMilk_Agg_K3 <- round(MMilk_Agg_K3,2)
#MMilk_Agg_K4 <- round(MMilk_Agg_K4,2)
head(MMilk_Agg_K3)
head(MMilk_Agg_K4)
library(dplyr)
MMilk_Agg_K3 <- Mammals_Milk %>% group_by(km_3) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash))
MMilk_Agg_K4 <- Mammals_Milk %>% group_by(km_4) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
MMilk_Agg_K3 <- round(MMilk_Agg_K3,2)
#MMilk_Agg_K4 <- round(MMilk_Agg_K4,2)
head(MMilk_Agg_K3)
head(MMilk_Agg_K4)
library(dplyr)
MMilk_Agg_K3 <- Mammals_Milk %>% group_by(km_3) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
MMilk_Agg_K4 <- Mammals_Milk %>% group_by(km_4) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
head(MMilk_Agg_K3)
head(MMilk_Agg_K4)
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, group= km_3)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein,group= km_3)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat,group= km_3)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose,group= km_3)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash,group= km_3)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water, group= km_3)) + geom_boxplot() + facet_wrap(~km_3)
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein,group= km_3)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat,group= km_3)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose,group= km_3)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash,group= km_3)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water)) + geom_boxplot() + facet_wrap(~km_3)
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein,group= km_3)) + geom_boxplot()
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat,group= km_3)) + geom_boxplot()
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose,group= km_3)) + geom_boxplot()
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash,group= km_3)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(MMilk_Agg_K3, aes(Mean_Water)) + geom_boxplot() + facet_wrap(~km_3)
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot() + facet_wrap(~km_3)
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot() + facet_wrap(~km_3)
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot() + facet_wrap(~km_3)
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot() + facet_wrap(~km_3)
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
View(MMilk_km_3)
View(MMilk_Agg_K3)
View(Mammals_Milk)
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(Water)) + geom_boxplot() + facet_wrap(~km_3)
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot() + facet_wrap(~km_3)
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot() + facet_wrap(~km_3)
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot() + facet_wrap(~km_3)
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot() + facet_wrap(~km_3)
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(Water, group= km_3)) + geom_boxplot()
graph2 <- ggplot(MMilk_Agg_K3, aes(Mean_Protein)) + geom_boxplot() + facet_wrap(~km_3)
graph3 <- ggplot(MMilk_Agg_K3, aes(Mean_Fat)) + geom_boxplot() + facet_wrap(~km_3)
graph4 <- ggplot(MMilk_Agg_K3, aes(Mean_Lactose)) + geom_boxplot() + facet_wrap(~km_3)
graph5 <- ggplot(MMilk_Agg_K3, aes(Mean_Ash)) + geom_boxplot() + facet_wrap(~km_3)
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
View(Mammals_Milk)
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(Water)) + geom_boxplot() + facet_wrap(~km_3)
graph2 <- ggplot(Mammals_Milk, aes(Protein)) + geom_boxplot() + facet_wrap(~km_3)
graph3 <- ggplot(Mammals_Milk, aes(Fat)) + geom_boxplot() + facet_wrap(~km_3)
graph4 <- ggplot(Mammals_Milk, aes(Lactose)) + geom_boxplot() + facet_wrap(~km_3)
graph5 <- ggplot(Mammals_Milk, aes(Ash)) + geom_boxplot() + facet_wrap(~km_3)
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
Mammals_Milk<-read.csv("Milk_Composition.csv",header=T,row.names=1)
head(Mammals_Milk)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
Mammals_Milk<-read.csv("Milk_Composition.csv",header=T,row.names=1)
head(Mammals_Milk)
summary(Mammals_Milk)
Mammals_Milk_Std<-round(scale(Mammals_Milk),2)
head(Mammals_Milk_Std)
plot(hclust(dist(Mammals_Milk_Std)), lwd=3, main= "Mammals Clustered by Std. Milk Composition \n Euclidean Metric, Complete Linkage", sub="", cex.lab=1.25, hang=-1, frame.plot=T)
## NOT COMPLETE
set.seed(125)
MMilk_km_3 <- kmeans(Mammals_Milk_Std, centers = 3, nstart = 100)
MMilk_km_4 <- kmeans(Mammals_Milk_Std, centers = 4, nstart = 100)
Mammals_Milk <- data.frame(Mammals_Milk, km_3 = MMilk_km_3$cluster, km_4= MMilk_km_4$cluster)
arrange(Mammals_Milk, km_3)
arrange(Mammals_Milk, km_4)
library(dplyr)
MMilk_Agg_K3 <- Mammals_Milk %>% group_by(km_3) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
MMilk_Agg_K4 <- Mammals_Milk %>% group_by(km_4) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
head(MMilk_Agg_K3)
head(MMilk_Agg_K4)
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(factor(km_3),Water)) + geom_boxplot()
graph2 <- ggplot(Mammals_Milk, aes(Protein)) + geom_boxplot() + facet_wrap(~km_3)
graph3 <- ggplot(Mammals_Milk, aes(Fat)) + geom_boxplot() + facet_wrap(~km_3)
graph4 <- ggplot(Mammals_Milk, aes(Lactose)) + geom_boxplot() + facet_wrap(~km_3)
graph5 <- ggplot(Mammals_Milk, aes(Ash)) + geom_boxplot() + facet_wrap(~km_3)
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(factor(km_3),Water)) + geom_boxplot()
graph2 <- ggplot(Mammals_Milk, aes(factor(km_3),Protein)) + geom_boxplot()
graph3 <- ggplot(Mammals_Milk, aes(factor(km_3),Fat)) + geom_boxplot()
graph4 <- ggplot(Mammals_Milk, aes(factor(km_3),Lactose)) + geom_boxplot()
graph5 <- ggplot(Mammals_Milk, aes(factor(km_3),Ash)) + geom_boxplot()
graph1
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
wgss<-rep(0,8)
for(i in 1:8){wgss[i]<-kmeans(Mammals_Milk_Std,centers=i,nstart=50)$tot.withinss}
plot(c(1:8),wgss,type="b",pch=16,cex=1.3,ylim=c(0,100), xlab="Number of Groups",ylab="WGSS")
# It seems like the "elbow" in this graph could be at 4 groups. I'd say it stays pretty consistent with Q2, where we could also observe a general split into 4 smaller clusters.
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(factor(km_3),Water)) + geom_boxplot()
graph2 <- ggplot(Mammals_Milk, aes(factor(km_3),Protein)) + geom_boxplot()
graph3 <- ggplot(Mammals_Milk, aes(factor(km_3),Fat)) + geom_boxplot()
graph4 <- ggplot(Mammals_Milk, aes(factor(km_3),Lactose)) + geom_boxplot()
graph5 <- ggplot(Mammals_Milk, aes(factor(km_3),Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(group(km_3),Water)) + geom_boxplot()
graph2 <- ggplot(Mammals_Milk, aes(factor(km_3),Protein)) + geom_boxplot()
graph3 <- ggplot(Mammals_Milk, aes(factor(km_3),Fat)) + geom_boxplot()
graph4 <- ggplot(Mammals_Milk, aes(factor(km_3),Lactose)) + geom_boxplot()
graph5 <- ggplot(Mammals_Milk, aes(factor(km_3),Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(group=km_3,Water)) + geom_boxplot()
graph2 <- ggplot(Mammals_Milk, aes(factor(km_3),Protein)) + geom_boxplot()
graph3 <- ggplot(Mammals_Milk, aes(factor(km_3),Fat)) + geom_boxplot()
graph4 <- ggplot(Mammals_Milk, aes(factor(km_3),Lactose)) + geom_boxplot()
graph5 <- ggplot(Mammals_Milk, aes(factor(km_3),Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(factor(km_3),Water)) + geom_boxplot()
graph2 <- ggplot(Mammals_Milk, aes(factor(km_3),Protein)) + geom_boxplot()
graph3 <- ggplot(Mammals_Milk, aes(factor(km_3),Fat)) + geom_boxplot()
graph4 <- ggplot(Mammals_Milk, aes(factor(km_3),Lactose)) + geom_boxplot()
graph5 <- ggplot(Mammals_Milk, aes(factor(km_3),Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
set.seed(125)
MMilk_km_3 <- kmeans(Mammals_Milk_Std, centers = 3, nstart = 100)
MMilk_km_4 <- kmeans(Mammals_Milk_Std, centers = 4, nstart = 100)
Mammals_Milk <- data.frame(Mammals_Milk, km_3 = MMilk_km_3$cluster, km_4= MMilk_km_4$cluster)
arrange(Mammals_Milk, km_3)
arrange(Mammals_Milk, km_4)
plot(hclust(dist(Mammals_Milk_Std)), lwd=3, main= "Mammals Clustered by Std. Milk Composition \n Euclidean Metric, Complete Linkage", sub="", cex.lab=1.25, hang=-1, frame.plot=T)
Mammals_Milk_Std<-round(scale(Mammals_Milk),2)
head(Mammals_Milk_Std)
set.seed(125)
MMilk_km_3 <- kmeans(Mammals_Milk_Std, centers = 3, nstart = 100)
MMilk_km_4 <- kmeans(Mammals_Milk_Std, centers = 4, nstart = 100)
Mammals_Milk <- data.frame(Mammals_Milk, km_3 = MMilk_km_3$cluster, km_4= MMilk_km_4$cluster)
arrange(Mammals_Milk, km_3)
arrange(Mammals_Milk, km_4)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
Mammals_Milk<-read.csv("Milk_Composition.csv",header=T,row.names=1)
head(Mammals_Milk)
summary(Mammals_Milk)
Mammals_Milk_Std<-round(scale(Mammals_Milk),2)
head(Mammals_Milk_Std)
plot(hclust(dist(Mammals_Milk_Std)), lwd=3, main= "Mammals Clustered by Std. Milk Composition \n Euclidean Metric, Complete Linkage", sub="", cex.lab=1.25, hang=-1, frame.plot=T)
set.seed(125)
MMilk_km_3 <- kmeans(Mammals_Milk_Std, centers = 3, nstart = 100)
MMilk_km_4 <- kmeans(Mammals_Milk_Std, centers = 4, nstart = 100)
Mammals_Milk <- data.frame(Mammals_Milk, km_3 = MMilk_km_3$cluster, km_4= MMilk_km_4$cluster)
arrange(Mammals_Milk, km_3)
arrange(Mammals_Milk, km_4)
library(dplyr)
MMilk_Agg_K3 <- Mammals_Milk %>% group_by(km_3) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
MMilk_Agg_K4 <- Mammals_Milk %>% group_by(km_4) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
head(MMilk_Agg_K3)
head(MMilk_Agg_K4)
library(dplyr)
MMilk_Agg_K3 <- Mammals_Milk %>% group_by(km_3) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
MMilk_Agg_K4 <- Mammals_Milk %>% group_by(km_4) %>% summarise(Count= n(), Mean_Water= mean(Water), Mean_Protein= mean(Protein), Mean_Fat= mean(Fat), Mean_Lactose= mean(Lactose), Mean_Ash= mean(Ash)) %>% round(2)
head(MMilk_Agg_K3)
head(MMilk_Agg_K4)
library(ggplot2)
library(cowplot)
require(cowplot)
graph1 <- ggplot(Mammals_Milk, aes(factor(km_3),Water)) + geom_boxplot()
graph2 <- ggplot(Mammals_Milk, aes(factor(km_3),Protein)) + geom_boxplot()
graph3 <- ggplot(Mammals_Milk, aes(factor(km_3),Fat)) + geom_boxplot()
graph4 <- ggplot(Mammals_Milk, aes(factor(km_3),Lactose)) + geom_boxplot()
graph5 <- ggplot(Mammals_Milk, aes(factor(km_3),Ash)) + geom_boxplot()
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
wgss<-rep(0,8)
for(i in 1:8){wgss[i]<-kmeans(Mammals_Milk_Std,centers=i,nstart=50)$tot.withinss}
plot(c(1:8),wgss,type="b",pch=16,cex=1.3,ylim=c(0,100), xlab="Number of Groups",ylab="WGSS")
# It seems like the "elbow" in this graph could be at 4 groups. I'd say it stays pretty consistent with Q2, where we could also observe a general split into 4 smaller clusters.
library("topicmodels")
install.packages("topicmodels")
library("topicmodels")
library("topicmodels")
library("topicmodels")
library("topicmodels")
system("apt install libgsl-dev", intern=TRUE)
install.packages("topicmodels")
library("topicmodels")
library("topicmodels")
library("topicmodels")
install.packages("topicmodels")
library("topicmodels")
library('topicmodels')
library('tidytext')
library('topicmodels')
install.packages("topicmodels")
install.packages('gls')
install.packages('gsl')
library(gsl)
install.packages('topicmodels')
install.packages('gsl')
#install.packages('topicmodels')
#library('topicmodels')
#library('tidytext')
install.packages("gsl")
#install.packages('gsl')
install.packages('topicmodels')
#library('tidytext')
#install.packages('gsl')
install.packages('topicmodels')
#library('tidytext')
install.packages('topicmodels')
gc()
library(tokenizers)
tokenize_ngrams(charVector, n=2)
setwd("/Users/dsharpylo/Documents/RStudio/DATA180_Dickinson/DATA180/hw7")
library(tidyverse)
library(tm)
news<-read.csv("news.csv",header=T)
posWords <- scan("positive-words.txt", character(0), sep = "\n")  # 2006 items
negWords <- scan("negative-words.txt", character(0), sep = "\n")  # 4783 items
head(posWords,15)
head(negWords,15)
max(news$year)- min(news$year)
charVector <- news$headline_text
head(charVector,6)
wordVector <- VectorSource(charVector)
wordCorpus <- Corpus(wordVector)
wordVector <- VectorSource(charVector)
wordCorpus <- Corpus(wordVector)
#make all of the letters in "wordCorpus" lowercase
wordCorpus <- tm_map(wordCorpus, content_transformer(tolower))
#remove the punctuation in "wordCorpus"
wordCorpus <- tm_map(wordCorpus, removePunctuation)
#remove numbers in "wordCorpus"
wordCorpus <- tm_map(wordCorpus, removeNumbers)
#take out the "stop" words, such as "the", "a" and "at"
wordCorpus <- tm_map(wordCorpus, removeWords, stopwords("english"))
#
tdm <- TermDocumentMatrix(charVector)
m <- as.matrix(tdm)
wordCounts <- rowSums(m)
wordCounts <- sort(wordCounts, decreasing = TRUE)
head(wordCounts,10)
wordCounts1 <- wordCounts[wordCounts>=50]
barplot(wordCounts1,las=2, cex.axis= 0.75)
totalWords <- sum(wordCounts)
matchedP <- match(names(wordCounts), posWords, nomatch = 0)
matchedP <- wordCounts[matchedP != 0]
barplot(matchedP[matchedP>=20],las=2,cex.names=0.75)
sum(matchedP)/totalWords
matchedN <- match(names(wordCounts), negWords, nomatch = 0)
matchedN <- wordCounts[matchedN != 0]
barplot(matchedN[matchedN>=20],las=2,cex.names=0.75)
sum(matchedN)/totalWords
news <- news %>% group_by(year,month) %>% mutate(count=n(), yearmonth = paste(year, month,sep = '/')) %>% arrange(year,month,day)
library(ggplot2)
ggplot(news, aes(x=factor(yearmonth, levels = unique(yearmonth)))) + geom_bar() +theme(axis.text=element_text(size=4,angle=90))
library("quanteda")
x <- termFreq(charVector)
sort(x, decreasing = TRUE)[1:20]
library(tokenizers)
tokenize_ngrams(charVector, n=2)
library(ngram)
words <- paste(unlist(charVector), collapse =" ")
ng <- ngram(words,n=2)
table <- get.phrasetable(ng)
head(table, 20)
library(tokenizers)
#tokenize_ngrams(charVector, n=2)
library(ngram)
words <- paste(unlist(charVector), collapse =" ")
ng <- ngram(words,n=2)
table <- get.phrasetable(ng)
head(table, 20)
library(tokenizers)
tokenize_ngrams(charVector, n=2)
library(ngram)
words <- paste(unlist(charVector), collapse =" ")
ng <- ngram(words,n=2)
table <- get.phrasetable(ng)
head(table, 20)
x <- termFreq(charVector)
sort(x, decreasing = TRUE)[1:20]
x <- termFreq(charVector)
x<- removePunctuation(x)
charVector<- removePunctuation(charVector)
charVector<- removeNumbers(charVector)
charVector<- removeWords(charVector, stopwords("en"))
x <- termFreq(charVector)
sort(x, decreasing = TRUE)[1:20]
library(tokenizers)
#tokenize_ngrams(charVector, n=2)
library(ngram)
words <- paste(unlist(charVector), collapse =" ")
ng <- ngram(words,n=2)
table <- get.phrasetable(ng)
head(table, 20)
# charVector<- removePunctuation(charVector)
# charVector<- removeNumbers(charVector)
# charVector<- removeWords(charVector, stopwords("en"))
x <- termFreq(charVector)
sort(x, decreasing = TRUE)[1:20]
setwd("/Users/dsharpylo/Documents/RStudio/DATA180_Dickinson/DATA180/hw7")
library(tidyverse)
library(tm)
news<-read.csv("news.csv",header=T)
posWords <- scan("positive-words.txt", character(0), sep = "\n")  # 2006 items
negWords <- scan("negative-words.txt", character(0), sep = "\n")  # 4783 items
head(posWords,15)
head(negWords,15)
max(news$year)- min(news$year)
charVector <- news$headline_text
head(charVector,6)
wordVector <- VectorSource(charVector)
wordCorpus <- Corpus(wordVector)
# charVector<- removePunctuation(charVector)
# charVector<- removeNumbers(charVector)
# charVector<- removeWords(charVector, stopwords("en"))
x <- termFreq(charVector)
sort(x, decreasing = TRUE)[1:20]
library(tokenizers)
#tokenize_ngrams(charVector, n=2)
library(ngram)
words <- paste(unlist(charVector), collapse =" ")
ng <- ngram(words,n=2)
table <- get.phrasetable(ng)
head(table, 20)
charVector<- removePunctuation(charVector)
charVector<- removeNumbers(charVector)
charVector<- removeWords(charVector, stopwords("en"))
x <- termFreq(charVector)
sort(x, decreasing = TRUE)[1:20]
library(tokenizers)
#tokenize_ngrams(charVector, n=2)
library(ngram)
words <- paste(unlist(charVector), collapse =" ")
ng <- ngram(words,n=2)
table <- get.phrasetable(ng)
head(table, 20)
posWords <- scan("positive-words.txt", character(0), sep = "\n")  # 2006 items
negWords <- scan("negative-words.txt", character(0), sep = "\n")  # 4783 items
head(posWords,15)
head(negWords,15)
charVector <- news$headline_text
head(charVector,6)
ex <- charVector
ex<- removePunctuation(ex)
ex<- removeNumbers(ex)
ex<- removeWords(ex, stopwords("en"))
x <- termFreq(ex)
sort(x, decreasing = TRUE)[1:20]
library(tokenizers)
#tokenize_ngrams(charVector, n=2)
library(ngram)
words <- paste(unlist(ex), collapse =" ")
ng <- ngram(words,n=2)
table <- get.phrasetable(ng)
head(table, 20)
